<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manyi.iw.contract.soa.server.mybatis.dao.write.mbg.MBGJazUserPaymentWriteDao">
  <resultMap id="BaseResultMap" type="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="typeName" jdbcType="VARCHAR" property="typeName" />
    <result column="typeDesc" jdbcType="VARCHAR" property="typeDesc" />
    <result column="payType" jdbcType="TINYINT" property="payType" />
    <result column="payWater" jdbcType="VARCHAR" property="payWater" />
    <result column="payTime" jdbcType="TIMESTAMP" property="payTime" />
    <result column="startDate" jdbcType="CHAR" property="startDate" />
    <result column="endDate" jdbcType="CHAR" property="endDate" />
    <result column="totalSum" jdbcType="BIGINT" property="totalSum" />
    <result column="creatorId" jdbcType="BIGINT" property="creatorId" />
    <result column="creatorLevel" jdbcType="TINYINT" property="creatorLevel" />
    <result column="cityId" jdbcType="BIGINT" property="cityId" />
    <result column="bigAreaId" jdbcType="BIGINT" property="bigAreaId" />
    <result column="groupId" jdbcType="BIGINT" property="groupId" />
    <result column="payCode" jdbcType="CHAR" property="payCode" />
    <result column="attach" jdbcType="VARCHAR" property="attach" />
    <result column="contractId" jdbcType="BIGINT" property="contractId" />
    <result column="bankCityId" jdbcType="INTEGER" property="bankCityId" />
    <result column="bankCityName" jdbcType="VARCHAR" property="bankCityName" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="subBank" jdbcType="VARCHAR" property="subBank" />
    <result column="openName" jdbcType="VARCHAR" property="openName" />
    <result column="bankCode" jdbcType="VARCHAR" property="bankCode" />
    <result column="terminalId" jdbcType="BIGINT" property="terminalId" />
    <result column="terminalLevel" jdbcType="TINYINT" property="terminalLevel" />
    <result column="terminalTime" jdbcType="TIMESTAMP" property="terminalTime" />
    <result column="payWay" jdbcType="TINYINT" property="payWay" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="payStartDate" jdbcType="CHAR" property="payStartDate" />
    <result column="payEndDate" jdbcType="CHAR" property="payEndDate" />
    <result column="hostContractId" jdbcType="BIGINT" property="hostContractId" />
    <result column="actualAmount" jdbcType="BIGINT" property="actualAmount" />
    <result column="payWaterInner" jdbcType="BIGINT" property="payWaterInner" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, createTime, updateTime, status, type, typeName, typeDesc, payType, payWater, 
    payTime, startDate, endDate, totalSum, creatorId, creatorLevel, cityId, bigAreaId, 
    groupId, payCode, attach, contractId, bankCityId, bankCityName, bank, subBank, openName, 
    bankCode, terminalId, terminalLevel, terminalTime, payWay, title, year, payStartDate, 
    payEndDate, hostContractId, actualAmount, payWaterInner
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPaymentExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jaz_user_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit!=null">
      limit 
      <if test="start!=null">
        #{start},
      </if>
      #{limit}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jaz_user_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit!=null">
      limit 
      <if test="start!=null">
        #{start},
      </if>
      #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jaz_user_payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from jaz_user_payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPaymentExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from jaz_user_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jaz_user_payment (createTime, updateTime, status, 
      type, typeName, typeDesc, 
      payType, payWater, payTime, 
      startDate, endDate, totalSum, 
      creatorId, creatorLevel, cityId, 
      bigAreaId, groupId, payCode, 
      attach, contractId, bankCityId, 
      bankCityName, bank, subBank, 
      openName, bankCode, terminalId, 
      terminalLevel, terminalTime, payWay, 
      title, year, payStartDate, 
      payEndDate, hostContractId, actualAmount, 
      payWaterInner, memo)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{typeName,jdbcType=VARCHAR}, #{typeDesc,jdbcType=VARCHAR}, 
      #{payType,jdbcType=TINYINT}, #{payWater,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{startDate,jdbcType=CHAR}, #{endDate,jdbcType=CHAR}, #{totalSum,jdbcType=BIGINT}, 
      #{creatorId,jdbcType=BIGINT}, #{creatorLevel,jdbcType=TINYINT}, #{cityId,jdbcType=BIGINT}, 
      #{bigAreaId,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{payCode,jdbcType=CHAR}, 
      #{attach,jdbcType=VARCHAR}, #{contractId,jdbcType=BIGINT}, #{bankCityId,jdbcType=INTEGER}, 
      #{bankCityName,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, #{subBank,jdbcType=VARCHAR}, 
      #{openName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{terminalId,jdbcType=BIGINT}, 
      #{terminalLevel,jdbcType=TINYINT}, #{terminalTime,jdbcType=TIMESTAMP}, #{payWay,jdbcType=TINYINT}, 
      #{title,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{payStartDate,jdbcType=CHAR}, 
      #{payEndDate,jdbcType=CHAR}, #{hostContractId,jdbcType=BIGINT}, #{actualAmount,jdbcType=BIGINT}, 
      #{payWaterInner,jdbcType=BIGINT}, #{memo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jaz_user_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeName != null">
        typeName,
      </if>
      <if test="typeDesc != null">
        typeDesc,
      </if>
      <if test="payType != null">
        payType,
      </if>
      <if test="payWater != null">
        payWater,
      </if>
      <if test="payTime != null">
        payTime,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="totalSum != null">
        totalSum,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="creatorLevel != null">
        creatorLevel,
      </if>
      <if test="cityId != null">
        cityId,
      </if>
      <if test="bigAreaId != null">
        bigAreaId,
      </if>
      <if test="groupId != null">
        groupId,
      </if>
      <if test="payCode != null">
        payCode,
      </if>
      <if test="attach != null">
        attach,
      </if>
      <if test="contractId != null">
        contractId,
      </if>
      <if test="bankCityId != null">
        bankCityId,
      </if>
      <if test="bankCityName != null">
        bankCityName,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="subBank != null">
        subBank,
      </if>
      <if test="openName != null">
        openName,
      </if>
      <if test="bankCode != null">
        bankCode,
      </if>
      <if test="terminalId != null">
        terminalId,
      </if>
      <if test="terminalLevel != null">
        terminalLevel,
      </if>
      <if test="terminalTime != null">
        terminalTime,
      </if>
      <if test="payWay != null">
        payWay,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="payStartDate != null">
        payStartDate,
      </if>
      <if test="payEndDate != null">
        payEndDate,
      </if>
      <if test="hostContractId != null">
        hostContractId,
      </if>
      <if test="actualAmount != null">
        actualAmount,
      </if>
      <if test="payWaterInner != null">
        payWaterInner,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDesc != null">
        #{typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="payWater != null">
        #{payWater,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="totalSum != null">
        #{totalSum,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creatorLevel != null">
        #{creatorLevel,jdbcType=TINYINT},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="bigAreaId != null">
        #{bigAreaId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="payCode != null">
        #{payCode,jdbcType=CHAR},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="bankCityId != null">
        #{bankCityId,jdbcType=INTEGER},
      </if>
      <if test="bankCityName != null">
        #{bankCityName,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="subBank != null">
        #{subBank,jdbcType=VARCHAR},
      </if>
      <if test="openName != null">
        #{openName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="terminalId != null">
        #{terminalId,jdbcType=BIGINT},
      </if>
      <if test="terminalLevel != null">
        #{terminalLevel,jdbcType=TINYINT},
      </if>
      <if test="terminalTime != null">
        #{terminalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payWay != null">
        #{payWay,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="payStartDate != null">
        #{payStartDate,jdbcType=CHAR},
      </if>
      <if test="payEndDate != null">
        #{payEndDate,jdbcType=CHAR},
      </if>
      <if test="hostContractId != null">
        #{hostContractId,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="payWaterInner != null">
        #{payWaterInner,jdbcType=BIGINT},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPaymentExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from jaz_user_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.typeName != null">
        typeName = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeDesc != null">
        typeDesc = #{record.typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        payType = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.payWater != null">
        payWater = #{record.payWater,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        payTime = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startDate != null">
        startDate = #{record.startDate,jdbcType=CHAR},
      </if>
      <if test="record.endDate != null">
        endDate = #{record.endDate,jdbcType=CHAR},
      </if>
      <if test="record.totalSum != null">
        totalSum = #{record.totalSum,jdbcType=BIGINT},
      </if>
      <if test="record.creatorId != null">
        creatorId = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.creatorLevel != null">
        creatorLevel = #{record.creatorLevel,jdbcType=TINYINT},
      </if>
      <if test="record.cityId != null">
        cityId = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.bigAreaId != null">
        bigAreaId = #{record.bigAreaId,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null">
        groupId = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.payCode != null">
        payCode = #{record.payCode,jdbcType=CHAR},
      </if>
      <if test="record.attach != null">
        attach = #{record.attach,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null">
        contractId = #{record.contractId,jdbcType=BIGINT},
      </if>
      <if test="record.bankCityId != null">
        bankCityId = #{record.bankCityId,jdbcType=INTEGER},
      </if>
      <if test="record.bankCityName != null">
        bankCityName = #{record.bankCityName,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.subBank != null">
        subBank = #{record.subBank,jdbcType=VARCHAR},
      </if>
      <if test="record.openName != null">
        openName = #{record.openName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bankCode = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.terminalId != null">
        terminalId = #{record.terminalId,jdbcType=BIGINT},
      </if>
      <if test="record.terminalLevel != null">
        terminalLevel = #{record.terminalLevel,jdbcType=TINYINT},
      </if>
      <if test="record.terminalTime != null">
        terminalTime = #{record.terminalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payWay != null">
        payWay = #{record.payWay,jdbcType=TINYINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.payStartDate != null">
        payStartDate = #{record.payStartDate,jdbcType=CHAR},
      </if>
      <if test="record.payEndDate != null">
        payEndDate = #{record.payEndDate,jdbcType=CHAR},
      </if>
      <if test="record.hostContractId != null">
        hostContractId = #{record.hostContractId,jdbcType=BIGINT},
      </if>
      <if test="record.actualAmount != null">
        actualAmount = #{record.actualAmount,jdbcType=BIGINT},
      </if>
      <if test="record.payWaterInner != null">
        payWaterInner = #{record.payWaterInner,jdbcType=BIGINT},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      typeName = #{record.typeName,jdbcType=VARCHAR},
      typeDesc = #{record.typeDesc,jdbcType=VARCHAR},
      payType = #{record.payType,jdbcType=TINYINT},
      payWater = #{record.payWater,jdbcType=VARCHAR},
      payTime = #{record.payTime,jdbcType=TIMESTAMP},
      startDate = #{record.startDate,jdbcType=CHAR},
      endDate = #{record.endDate,jdbcType=CHAR},
      totalSum = #{record.totalSum,jdbcType=BIGINT},
      creatorId = #{record.creatorId,jdbcType=BIGINT},
      creatorLevel = #{record.creatorLevel,jdbcType=TINYINT},
      cityId = #{record.cityId,jdbcType=BIGINT},
      bigAreaId = #{record.bigAreaId,jdbcType=BIGINT},
      groupId = #{record.groupId,jdbcType=BIGINT},
      payCode = #{record.payCode,jdbcType=CHAR},
      attach = #{record.attach,jdbcType=VARCHAR},
      contractId = #{record.contractId,jdbcType=BIGINT},
      bankCityId = #{record.bankCityId,jdbcType=INTEGER},
      bankCityName = #{record.bankCityName,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      subBank = #{record.subBank,jdbcType=VARCHAR},
      openName = #{record.openName,jdbcType=VARCHAR},
      bankCode = #{record.bankCode,jdbcType=VARCHAR},
      terminalId = #{record.terminalId,jdbcType=BIGINT},
      terminalLevel = #{record.terminalLevel,jdbcType=TINYINT},
      terminalTime = #{record.terminalTime,jdbcType=TIMESTAMP},
      payWay = #{record.payWay,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      payStartDate = #{record.payStartDate,jdbcType=CHAR},
      payEndDate = #{record.payEndDate,jdbcType=CHAR},
      hostContractId = #{record.hostContractId,jdbcType=BIGINT},
      actualAmount = #{record.actualAmount,jdbcType=BIGINT},
      payWaterInner = #{record.payWaterInner,jdbcType=BIGINT},
      memo = #{record.memo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      typeName = #{record.typeName,jdbcType=VARCHAR},
      typeDesc = #{record.typeDesc,jdbcType=VARCHAR},
      payType = #{record.payType,jdbcType=TINYINT},
      payWater = #{record.payWater,jdbcType=VARCHAR},
      payTime = #{record.payTime,jdbcType=TIMESTAMP},
      startDate = #{record.startDate,jdbcType=CHAR},
      endDate = #{record.endDate,jdbcType=CHAR},
      totalSum = #{record.totalSum,jdbcType=BIGINT},
      creatorId = #{record.creatorId,jdbcType=BIGINT},
      creatorLevel = #{record.creatorLevel,jdbcType=TINYINT},
      cityId = #{record.cityId,jdbcType=BIGINT},
      bigAreaId = #{record.bigAreaId,jdbcType=BIGINT},
      groupId = #{record.groupId,jdbcType=BIGINT},
      payCode = #{record.payCode,jdbcType=CHAR},
      attach = #{record.attach,jdbcType=VARCHAR},
      contractId = #{record.contractId,jdbcType=BIGINT},
      bankCityId = #{record.bankCityId,jdbcType=INTEGER},
      bankCityName = #{record.bankCityName,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      subBank = #{record.subBank,jdbcType=VARCHAR},
      openName = #{record.openName,jdbcType=VARCHAR},
      bankCode = #{record.bankCode,jdbcType=VARCHAR},
      terminalId = #{record.terminalId,jdbcType=BIGINT},
      terminalLevel = #{record.terminalLevel,jdbcType=TINYINT},
      terminalTime = #{record.terminalTime,jdbcType=TIMESTAMP},
      payWay = #{record.payWay,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      payStartDate = #{record.payStartDate,jdbcType=CHAR},
      payEndDate = #{record.payEndDate,jdbcType=CHAR},
      hostContractId = #{record.hostContractId,jdbcType=BIGINT},
      actualAmount = #{record.actualAmount,jdbcType=BIGINT},
      payWaterInner = #{record.payWaterInner,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="typeName != null">
        typeName = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDesc != null">
        typeDesc = #{typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        payType = #{payType,jdbcType=TINYINT},
      </if>
      <if test="payWater != null">
        payWater = #{payWater,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        payTime = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=CHAR},
      </if>
      <if test="totalSum != null">
        totalSum = #{totalSum,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="creatorLevel != null">
        creatorLevel = #{creatorLevel,jdbcType=TINYINT},
      </if>
      <if test="cityId != null">
        cityId = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="bigAreaId != null">
        bigAreaId = #{bigAreaId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        groupId = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="payCode != null">
        payCode = #{payCode,jdbcType=CHAR},
      </if>
      <if test="attach != null">
        attach = #{attach,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        contractId = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="bankCityId != null">
        bankCityId = #{bankCityId,jdbcType=INTEGER},
      </if>
      <if test="bankCityName != null">
        bankCityName = #{bankCityName,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="subBank != null">
        subBank = #{subBank,jdbcType=VARCHAR},
      </if>
      <if test="openName != null">
        openName = #{openName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bankCode = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="terminalId != null">
        terminalId = #{terminalId,jdbcType=BIGINT},
      </if>
      <if test="terminalLevel != null">
        terminalLevel = #{terminalLevel,jdbcType=TINYINT},
      </if>
      <if test="terminalTime != null">
        terminalTime = #{terminalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payWay != null">
        payWay = #{payWay,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="payStartDate != null">
        payStartDate = #{payStartDate,jdbcType=CHAR},
      </if>
      <if test="payEndDate != null">
        payEndDate = #{payEndDate,jdbcType=CHAR},
      </if>
      <if test="hostContractId != null">
        hostContractId = #{hostContractId,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        actualAmount = #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="payWaterInner != null">
        payWaterInner = #{payWaterInner,jdbcType=BIGINT},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      typeName = #{typeName,jdbcType=VARCHAR},
      typeDesc = #{typeDesc,jdbcType=VARCHAR},
      payType = #{payType,jdbcType=TINYINT},
      payWater = #{payWater,jdbcType=VARCHAR},
      payTime = #{payTime,jdbcType=TIMESTAMP},
      startDate = #{startDate,jdbcType=CHAR},
      endDate = #{endDate,jdbcType=CHAR},
      totalSum = #{totalSum,jdbcType=BIGINT},
      creatorId = #{creatorId,jdbcType=BIGINT},
      creatorLevel = #{creatorLevel,jdbcType=TINYINT},
      cityId = #{cityId,jdbcType=BIGINT},
      bigAreaId = #{bigAreaId,jdbcType=BIGINT},
      groupId = #{groupId,jdbcType=BIGINT},
      payCode = #{payCode,jdbcType=CHAR},
      attach = #{attach,jdbcType=VARCHAR},
      contractId = #{contractId,jdbcType=BIGINT},
      bankCityId = #{bankCityId,jdbcType=INTEGER},
      bankCityName = #{bankCityName,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      subBank = #{subBank,jdbcType=VARCHAR},
      openName = #{openName,jdbcType=VARCHAR},
      bankCode = #{bankCode,jdbcType=VARCHAR},
      terminalId = #{terminalId,jdbcType=BIGINT},
      terminalLevel = #{terminalLevel,jdbcType=TINYINT},
      terminalTime = #{terminalTime,jdbcType=TIMESTAMP},
      payWay = #{payWay,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      payStartDate = #{payStartDate,jdbcType=CHAR},
      payEndDate = #{payEndDate,jdbcType=CHAR},
      hostContractId = #{hostContractId,jdbcType=BIGINT},
      actualAmount = #{actualAmount,jdbcType=BIGINT},
      payWaterInner = #{payWaterInner,jdbcType=BIGINT},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.JazUserPayment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jaz_user_payment
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      typeName = #{typeName,jdbcType=VARCHAR},
      typeDesc = #{typeDesc,jdbcType=VARCHAR},
      payType = #{payType,jdbcType=TINYINT},
      payWater = #{payWater,jdbcType=VARCHAR},
      payTime = #{payTime,jdbcType=TIMESTAMP},
      startDate = #{startDate,jdbcType=CHAR},
      endDate = #{endDate,jdbcType=CHAR},
      totalSum = #{totalSum,jdbcType=BIGINT},
      creatorId = #{creatorId,jdbcType=BIGINT},
      creatorLevel = #{creatorLevel,jdbcType=TINYINT},
      cityId = #{cityId,jdbcType=BIGINT},
      bigAreaId = #{bigAreaId,jdbcType=BIGINT},
      groupId = #{groupId,jdbcType=BIGINT},
      payCode = #{payCode,jdbcType=CHAR},
      attach = #{attach,jdbcType=VARCHAR},
      contractId = #{contractId,jdbcType=BIGINT},
      bankCityId = #{bankCityId,jdbcType=INTEGER},
      bankCityName = #{bankCityName,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      subBank = #{subBank,jdbcType=VARCHAR},
      openName = #{openName,jdbcType=VARCHAR},
      bankCode = #{bankCode,jdbcType=VARCHAR},
      terminalId = #{terminalId,jdbcType=BIGINT},
      terminalLevel = #{terminalLevel,jdbcType=TINYINT},
      terminalTime = #{terminalTime,jdbcType=TIMESTAMP},
      payWay = #{payWay,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      payStartDate = #{payStartDate,jdbcType=CHAR},
      payEndDate = #{payEndDate,jdbcType=CHAR},
      hostContractId = #{hostContractId,jdbcType=BIGINT},
      actualAmount = #{actualAmount,jdbcType=BIGINT},
      payWaterInner = #{payWaterInner,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>