<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manyi.iw.contract.soa.server.mybatis.dao.read.mbg.MBGAgentContractOutAccountReadDao">
  <resultMap id="BaseResultMap" type="com.manyi.iw.contract.soa.api.model.po.mbg.AgentContractOutAccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="billId" jdbcType="BIGINT" property="billId" />
    <result column="outAccountType" jdbcType="TINYINT" property="outAccountType" />
    <result column="money" jdbcType="BIGINT" property="money" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="payeeName" jdbcType="VARCHAR" property="payeeName" />
    <result column="bankName" jdbcType="VARCHAR" property="bankName" />
    <result column="bankNum" jdbcType="VARCHAR" property="bankNum" />
    <result column="outAccountWay" jdbcType="TINYINT" property="outAccountWay" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
    <result column="agentCreate" jdbcType="BIGINT" property="agentCreate" />
    <result column="timeCreate" jdbcType="TIMESTAMP" property="timeCreate" />
    <result column="agentApply" jdbcType="BIGINT" property="agentApply" />
    <result column="timeApply" jdbcType="TIMESTAMP" property="timeApply" />
    <result column="agentLegalApprove" jdbcType="BIGINT" property="agentLegalApprove" />
    <result column="timeLegalApprove" jdbcType="TIMESTAMP" property="timeLegalApprove" />
    <result column="agentLegalReject" jdbcType="BIGINT" property="agentLegalReject" />
    <result column="timeLegalReject" jdbcType="TIMESTAMP" property="timeLegalReject" />
    <result column="agentFinanceApprove" jdbcType="BIGINT" property="agentFinanceApprove" />
    <result column="timeFinanceApprove" jdbcType="TIMESTAMP" property="timeFinanceApprove" />
    <result column="agentFinanceReject" jdbcType="BIGINT" property="agentFinanceReject" />
    <result column="timeFinanceReject" jdbcType="TIMESTAMP" property="timeFinanceReject" />
    <result column="agentFinanceOutAccount" jdbcType="BIGINT" property="agentFinanceOutAccount" />
    <result column="timeFinanceOutAccount" jdbcType="TIMESTAMP" property="timeFinanceOutAccount" />
    <result column="agentFinanceOutAccountReject" jdbcType="BIGINT" property="agentFinanceOutAccountReject" />
    <result column="timeFinanceOutAccountReject" jdbcType="TIMESTAMP" property="timeFinanceOutAccountReject" />
    <result column="rejectType" jdbcType="TINYINT" property="rejectType" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="serialCode" jdbcType="VARCHAR" property="serialCode" />
    <result column="outAccountWayRemark" jdbcType="TINYINT" property="outAccountWayRemark" />
    <result column="tradeSerialNumber" jdbcType="BIGINT" property="tradeSerialNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, billId, outAccountType, money, state, payeeName, bankName, bankNum, outAccountWay, 
    valid, agentCreate, timeCreate, agentApply, timeApply, agentLegalApprove, timeLegalApprove, 
    agentLegalReject, timeLegalReject, agentFinanceApprove, timeFinanceApprove, agentFinanceReject, 
    timeFinanceReject, agentFinanceOutAccount, timeFinanceOutAccount, agentFinanceOutAccountReject, 
    timeFinanceOutAccountReject, rejectType, createTime, updateTime, serialCode, outAccountWayRemark, 
    tradeSerialNumber
  </sql>
  <select id="selectByExample" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.AgentContractOutAccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from iw_agent_contract_out_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit!=null">
      limit 
      <if test="start!=null">
        #{start},
      </if>
      #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from iw_agent_contract_out_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countByExample" parameterType="com.manyi.iw.contract.soa.api.model.po.mbg.AgentContractOutAccountExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from iw_agent_contract_out_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>