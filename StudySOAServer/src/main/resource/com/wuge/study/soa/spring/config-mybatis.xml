<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder
            location="classpath:jdbc.properties,classpath:config.properties,classpath:memcache.properties"/>

    <!-- 读DataSource -->
    <bean class="com.manyi.dcm.lbdatasource.LBDataSource" destroy-method="close" id="readDataSource">
        <property name="name" value="${r.jdbc.name}"/>
        <property name="logSql" value="${r.jdbc.logSql}"/>
        <property name="sqlProfile" value="${r.jdbc.sqlProfile}"/>
        <property name="connectionFailover" value="${r.jdbc.connectionFailover}"/>
        <property name="dataSources">
            <bean class="com.manyi.dcm.lbdatasource.pool.DataSourcePool">
                <property name="name" value="${r.jdbc.name}-Pool"/>
                <property name="type" value="${r.jdbc.type}"/>
                <property name="connectionTestTimeout" value="${r.jdbc.connectionTestTimeout}"/>
                <property name="dataSourceConfigs">
                    <set>
                        <bean class="com.manyi.dcm.lbdatasource.pool.DataSourceConfig">
                            <property name="name" value="${r.jdbc.ds1.name}"/>
                            <property name="weight" value="${r.jdbc.ds1.weight}"/>
                            <property name="dataSourceClassName" value="${r.jdbc.dataSourceClassName}"/>
                            <property name="username" value="${r.jdbc.username}"/>
                            <property name="password" value="${r.jdbc.password}"/>
                            <property name="dataSourceProperties">
                                <props>
                                    <prop key="url">${r.jdbc.ds1.url}</prop>
                                    <prop key="useUnicode">${r.jdbc.useUnicode}</prop>
                                    <prop key="characterEncoding">${r.jdbc.characterEncoding}</prop>
                                    <prop key="cachePrepStmts">${r.jdbc.cachePrepStmts}</prop>
                                    <prop key="prepStmtCacheSize">${r.jdbc.prepStmtCacheSize}</prop>
                                    <prop key="prepStmtCacheSqlLimit">${r.jdbc.prepStmtCacheSqlLimit}</prop>
                                    <prop key="useServerPrepStmts">${r.jdbc.useServerPrepStmts}</prop>
                                </props>
                            </property>
                            <property name="readOnly" value="${r.jdbc.readOnly}"/>
                            <property name="maxPoolSize" value="${r.jdbc.maxPoolSize}"/>
                            <property name="minIdle" value="${r.jdbc.minIdle}"/>
                            <property name="connectionTimeout" value="${r.jdbc.connectionTimeout}"/>
                        </bean>

                        <bean class="com.manyi.dcm.lbdatasource.pool.DataSourceConfig">
                            <property name="name" value="${r.jdbc.ds2.name}"/>
                            <property name="weight" value="${r.jdbc.ds2.weight}"/>
                            <property name="dataSourceClassName" value="${r.jdbc.dataSourceClassName}"/>
                            <property name="username" value="${r.jdbc.username}"/>
                            <property name="password" value="${r.jdbc.password}"/>
                            <property name="dataSourceProperties">
                                <props>
                                    <prop key="url">${r.jdbc.ds2.url}</prop>
                                    <prop key="useUnicode">${r.jdbc.useUnicode}</prop>
                                    <prop key="characterEncoding">${r.jdbc.characterEncoding}</prop>
                                    <prop key="cachePrepStmts">${r.jdbc.cachePrepStmts}</prop>
                                    <prop key="prepStmtCacheSize">${r.jdbc.prepStmtCacheSize}</prop>
                                    <prop key="prepStmtCacheSqlLimit">${r.jdbc.prepStmtCacheSqlLimit}</prop>
                                    <prop key="useServerPrepStmts">${r.jdbc.useServerPrepStmts}</prop>
                                </props>
                            </property>
                            <property name="readOnly" value="${r.jdbc.readOnly}"/>
                            <property name="maxPoolSize" value="${r.jdbc.maxPoolSize}"/>
                            <property name="minIdle" value="${r.jdbc.minIdle}"/>
                            <property name="connectionTimeout" value="${r.jdbc.connectionTimeout}"/>
                        </bean>
                    </set>
                </property>
                <property name="loadBalancerType" value="${r.jdbc.loadBalancerType}"/>
            </bean>
        </property>
    </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="readSqlSessionFactory">
        <property name="dataSource" ref="readDataSource"/>
        <property name="configLocation" value="classpath:com/wuge/study/soa/mybatis/mappers/sqlmap-config.xml"/>
        <!--<property name="mapperLocations"-->
                  <!--value="classpath:com/manyi/iw/contract/soa/server/mybatis/mappers/read/**/*.xml"/>-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="readMapperScannerConfigurer">
        <property name="basePackage" value="com.manyi.iw.contract.soa.server.mybatis.dao.read.custom"/>
        <property name="sqlSessionFactoryBeanName" value="readSqlSessionFactory"/>
    </bean>

    <!-- 写DataSource -->
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="writeDataSource" scope="singleton">
        <property name="driverClassName" value="${w.jdbc.driverClassName}"/>
        <property name="url" value="${w.jdbc.url}"/>
        <property name="username" value="${w.jdbc.username}"/>
        <property name="password" value="${w.jdbc.password}"/>
        <property name="initialSize" value="${w.jdbc.initialSize}"/>
        <property name="maxActive" value="${w.jdbc.maxActive}"/>
        <property name="minIdle" value="${w.jdbc.minIdle}"/>
        <property name="maxIdle" value="${w.jdbc.maxIdle}"/>
        <property name="removeAbandoned" value="${w.jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${w.jdbc.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${w.jdbc.logAbandoned}"/>
        <property name="maxWait" value="${w.jdbc.maxWait}"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="900000"/>
    </bean>

    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="writeSqlSessionFactory">
        <property name="dataSource" ref="writeDataSource"/>
        <property name="configLocation" value="classpath:com/wuge/study/soa/mybatis/mappers/sqlmap-config.xml"/>
        <!--<property name="mapperLocations"-->
                  <!--value="classpath:com/manyi/iw/contract/soa/server/mybatis/mappers/write/**/*.xml"/>-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.manyi.iw.contract.soa.server.mybatis.dao.write.custom"/>
        <property name="sqlSessionFactoryBeanName" value="writeSqlSessionFactory"/>
    </bean>

</beans>